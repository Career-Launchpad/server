{"version":3,"sources":["../../../src/lib/deployment/save.js"],"names":["ctx","archived","sls","cli","log","undefined","deployment","save","result","dashboardUrl"],"mappings":";;;;;;;AAKA;;;;;;;;;;;;;;;0BAEe,iBAAeA,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoBC,YAAAA,QAApB,2DAA+B,KAA/B;AACbD,YAAAA,GAAG,CAACE,GAAJ,CAAQC,GAAR,CAAYC,GAAZ,CAAgB,mDAAhB,EAAqE,uBAArE;AADa;AAAA,mBAGY,oBAAoBJ,GAApB,EAAyBK,SAAzB,EAAoCA,SAApC,EAA+CJ,QAA/C,CAHZ;;AAAA;AAGPK,YAAAA,UAHO;AAAA;AAAA,mBAKQA,UAAU,CAACC,IAAX,EALR;;AAAA;AAKPC,YAAAA,MALO;AAObR,YAAAA,GAAG,CAACE,GAAJ,CAAQC,GAAR,CAAYC,GAAZ,CACO,oEAAmEI,MAAM,CAACC,YAAa,EAD9F,EACiG;AAC/F,mCAFF;;AAPa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["/*\n * Save Deployment\n * - This uses the new deployment data model.\n */\n\nimport parseDeploymentData from './parse'\n\nexport default async function(ctx, archived = false) {\n  ctx.sls.cli.log('Publishing service to the Enterprise Dashboard...', 'Serverless Enterprise')\n\n  const deployment = await parseDeploymentData(ctx, undefined, undefined, archived)\n\n  const result = await deployment.save()\n\n  ctx.sls.cli.log(\n        `Successfully published your service to the Enterprise Dashboard: ${result.dashboardUrl}`, // eslint-disable-line\n    'Serverless Enterprise'\n  )\n}\n"],"file":"save.js"}