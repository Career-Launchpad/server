{"version":3,"sources":["../../src/lib/wrapClean.js"],"names":["ctx","fs","pathExistsSync","state","pathAssets","removeSync","func","functions","fn","file","runtime","includes","entryNew","filePath","path","join","sls","config","servicePath"],"mappings":";;;;;;;AAKA;;AACA;;;;;;;;;;;;;0BAEe,iBAAOA,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACb;AACA,gBAAIC,iBAAGC,cAAH,CAAkBF,GAAG,CAACG,KAAJ,CAAUC,UAA5B,CAAJ,EAA6C;AAC3CH,+BAAGI,UAAH,CAAcL,GAAG,CAACG,KAAJ,CAAUC,UAAxB;AACD;;AAED,iBAAWE,IAAX,IAAmBN,GAAG,CAACG,KAAJ,CAAUI,SAA7B,EAAwC;AAChCC,cAAAA,EADgC,GAC3BR,GAAG,CAACG,KAAJ,CAAUI,SAAV,CAAoBD,IAApB,CAD2B;AAGlCG,cAAAA,IAHkC;;AAItC,kBAAID,EAAE,CAACE,OAAH,CAAWC,QAAX,CAAoB,MAApB,CAAJ,EAAiC;AAC/BF,gBAAAA,IAAI,GAAGD,EAAE,CAACI,QAAH,GAAc,KAArB;AACD;;AAEKC,cAAAA,QARgC,GAQrBC,cAAKC,IAAL,CAAUf,GAAG,CAACgB,GAAJ,CAAQC,MAAR,CAAeC,WAAzB,EAAsCT,IAAtC,CARqB,EAUtC;;AACA,kBAAIR,iBAAGC,cAAH,CAAkBW,QAAlB,CAAJ,EAAiC;AAC/BZ,iCAAGI,UAAH,CAAcQ,QAAd;AACD;AACF;;AApBY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["/*\n * Wrap Clean\n * - Cleans up files create during wrapping\n */\n\nimport fs from 'fs-extra'\nimport path from 'path'\n\nexport default async (ctx) => {\n  // Clear assets (serverless-sdk)\n  if (fs.pathExistsSync(ctx.state.pathAssets)) {\n    fs.removeSync(ctx.state.pathAssets)\n  }\n\n  for (const func in ctx.state.functions) {\n    const fn = ctx.state.functions[func]\n\n    let file\n    if (fn.runtime.includes('node')) {\n      file = fn.entryNew + '.js'\n    }\n\n    const filePath = path.join(ctx.sls.config.servicePath, file)\n\n    // Clear wrapper file for this function\n    if (fs.pathExistsSync(filePath)) {\n      fs.removeSync(filePath)\n    }\n  }\n}\n"],"file":"wrapClean.js"}