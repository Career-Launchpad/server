{"version":3,"sources":["../../src/lib/credentials.js"],"names":["ctx","process","env","SLS_CLOUD_ACCESS","Promise","resolve","sls","service","tenant","accessKey","stageName","provider","getStage","command","processedInput","commands","app","getServiceName","accessKeyId","secretAccessKey","sessionToken","AWS_ACCESS_KEY_ID","AWS_SECRET_ACCESS_KEY","AWS_SESSION_TOKEN","cli","log"],"mappings":";;;;;;;AAAA;;;;;;;;;;;;;0BAEe,iBAAeA,GAAf;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,gBACRC,OAAO,CAACC,GAAR,CAAYC,gBADJ;AAAA;AAAA;AAAA;;AAAA,6CAEJC,OAAO,CAACC,OAAR,EAFI;;AAAA;AAAA;AAAA,mBAKW,wCAAsBL,GAAG,CAACM,GAAJ,CAAQC,OAAR,CAAgBC,MAAtC,CALX;;AAAA;AAKPC,YAAAA,SALO;AAAA;AAAA,mBAOgD,iCAAe;AAC1EA,cAAAA,SAD0E;AAE1EC,cAAAA,SAAS,EAAEV,GAAG,CAACW,QAAJ,CAAaC,QAAb,EAF+D;AAG1EC,cAAAA,OAAO,EAAEb,GAAG,CAACM,GAAJ,CAAQQ,cAAR,CAAuBC,QAAvB,CAAgC,CAAhC,CAHiE;AAI1EC,cAAAA,GAAG,EAAEhB,GAAG,CAACM,GAAJ,CAAQC,OAAR,CAAgBS,GAJqD;AAK1ER,cAAAA,MAAM,EAAER,GAAG,CAACM,GAAJ,CAAQC,OAAR,CAAgBC,MALkD;AAM1ED,cAAAA,OAAO,EAAEP,GAAG,CAACM,GAAJ,CAAQC,OAAR,CAAgBU,cAAhB;AANiE,aAAf,CAPhD;;AAAA;AAAA;AAOLC,YAAAA,WAPK,SAOLA,WAPK;AAOQC,YAAAA,eAPR,SAOQA,eAPR;AAOyBC,YAAAA,YAPzB,SAOyBA,YAPzB;AAebnB,YAAAA,OAAO,CAACC,GAAR,CAAYmB,iBAAZ,GAAgCH,WAAhC;AACAjB,YAAAA,OAAO,CAACC,GAAR,CAAYoB,qBAAZ,GAAoCH,eAApC;AACAlB,YAAAA,OAAO,CAACC,GAAR,CAAYqB,iBAAZ,GAAgCH,YAAhC;AACApB,YAAAA,GAAG,CAACM,GAAJ,CAAQkB,GAAR,CAAYC,GAAZ,CAAgB,iDAAhB;;AAlBa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import { getCredentials, getAccessKeyForTenant } from '@serverless/platform-sdk'\n\nexport default async function(ctx) {\n  if (!process.env.SLS_CLOUD_ACCESS) {\n    return Promise.resolve()\n  }\n\n  const accessKey = await getAccessKeyForTenant(ctx.sls.service.tenant)\n\n  const { accessKeyId, secretAccessKey, sessionToken } = await getCredentials({\n    accessKey,\n    stageName: ctx.provider.getStage(),\n    command: ctx.sls.processedInput.commands[0],\n    app: ctx.sls.service.app,\n    tenant: ctx.sls.service.tenant,\n    service: ctx.sls.service.getServiceName()\n  })\n  process.env.AWS_ACCESS_KEY_ID = accessKeyId\n  process.env.AWS_SECRET_ACCESS_KEY = secretAccessKey\n  process.env.AWS_SESSION_TOKEN = sessionToken\n  ctx.sls.cli.log('Cloud credentials set from Serverless Platform.')\n}\n"],"file":"credentials.js"}