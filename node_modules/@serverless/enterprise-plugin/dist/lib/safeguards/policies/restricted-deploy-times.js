"use strict";

var moment = require('moment');

var _require = require('iso8601-duration'),
    parse = _require.parse;

module.exports = function restrictedDeployTimesPolicy(policy, service) {
  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];
  var now = moment();
  var _iteratorNormalCompletion = true;
  var _didIteratorError = false;
  var _iteratorError = undefined;

  try {
    for (var _iterator = (Array.isArray(options) ? options : [options])[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
      var _ref2 = _step.value;
      var time = _ref2.time,
          duration = _ref2.duration,
          interval = _ref2.interval;
      time = moment(time);
      duration = moment.duration(parse(duration));
      interval = interval && moment.duration(parse(interval));

      while (time.isBefore(now)) {
        var end = time.clone();
        end.add(duration);

        if (end.isAfter(now)) {
          policy.fail(`Deploying on ${now.format('YYYY-MM-DD')} is not allowed`);
          return;
        }

        if (interval) {
          time.add(interval);
        } else {
          break;
        }
      }
    }
  } catch (err) {
    _didIteratorError = true;
    _iteratorError = err;
  } finally {
    try {
      if (!_iteratorNormalCompletion && _iterator.return != null) {
        _iterator.return();
      }
    } finally {
      if (_didIteratorError) {
        throw _iteratorError;
      }
    }
  }

  policy.approve();
};

module.exports.docs = 'https://git.io/fjfIk';
//# sourceMappingURL=restricted-deploy-times.js.map