{"version":3,"sources":["../../../../src/lib/safeguards/policies/require-dlq.js"],"names":["require","entries","fromPairs","asyncEvents","Set","module","exports","dlqPolicy","policy","service","failed","functions","declaration","naming","provider","Resources","compiled","logicalFuncNamesToConfigFuncName","Object","keys","map","funcName","getLambdaLogicalId","Properties","Type","DeadLetterConfig","TargetArn","events","eventTypes","ev","eventIntersection","filter","x","has","length","size","fail","approve","docs"],"mappings":";;;;;;;;;;;;;;;;;;eAA+BA,OAAO,CAAC,QAAD,C;IAA9BC,O,YAAAA,O;IAASC,S,YAAAA,S;;AAEjB,IAAMC,WAAW,GAAG,IAAIC,GAAJ,CAAQ,CAC1B,IAD0B,EAE1B,KAF0B,EAG1B,YAH0B,EAI1B,KAJ0B,EAK1B,iBAL0B,EAM1B,eAN0B,EAO1B,iBAP0B,EAQ1B,gBAR0B,CAAR,CAApB;;AAUAC,MAAM,CAACC,OAAP,GAAiB,SAASC,SAAT,CAAmBC,MAAnB,EAA2BC,OAA3B,EAAoC;AACnD,MAAIC,MAAM,GAAG,KAAb;AADmD,MAGlCC,SAHkC,GAQ/CF,OAR+C,CAGjDG,WAHiD,CAGlCD,SAHkC;AAAA,MAIrCE,MAJqC,GAQ/CJ,OAR+C,CAIjDK,QAJiD,CAIrCD,MAJqC;AAAA,MAMAE,SANA,GAQ/CN,OAR+C,CAKjDO,QALiD,CAM/C,2CAN+C,EAMAD,SANA;AASnD,MAAME,gCAAgC,GAAGf,SAAS,CAChDgB,MAAM,CAACC,IAAP,CAAYR,SAAS,IAAI,EAAzB,EAA6BS,GAA7B,CAAiC,UAACC,QAAD;AAAA,WAAc,CAACR,MAAM,CAACS,kBAAP,CAA0BD,QAA1B,CAAD,EAAsCA,QAAtC,CAAd;AAAA,GAAjC,CADgD,CAAlD,CATmD,CAanD;;AAbmD;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,UAcvCA,QAduC;AAAA;AAAA,UAc3BE,UAd2B,gBAc3BA,UAd2B;AAAA,UAcfC,IAde,gBAcfA,IAde;;AAejD,UACEA,IAAI,KAAK,uBAAT,IACCD,UAAU,CAACE,gBAAX,IAA+BF,UAAU,CAACE,gBAAX,CAA4BC,SAF9D,EAGE;AACA;AACD;;AACD,UAAMC,MAAM,GAAGhB,SAAS,CAACM,gCAAgC,CAACI,QAAD,CAAjC,CAAT,CAAsDM,MAAtD,IAAgE,EAA/E;AACA,UAAMC,UAAU,GAAG,IAAIxB,GAAJ,CAAQuB,MAAM,CAACP,GAAP,CAAW,UAACS,EAAD;AAAA,eAAQX,MAAM,CAACC,IAAP,CAAYU,EAAZ,EAAgB,CAAhB,CAAR;AAAA,OAAX,CAAR,CAAnB;AACA,UAAMC,iBAAiB,GAAG,IAAI1B,GAAJ,CAAQ,mBAAID,WAAJ,EAAiB4B,MAAjB,CAAwB,UAACC,CAAD;AAAA,eAAOJ,UAAU,CAACK,GAAX,CAAeD,CAAf,CAAP;AAAA,OAAxB,CAAR,CAA1B;;AACA,UAAIL,MAAM,CAACO,MAAP,KAAkB,CAAlB,IAAuBJ,iBAAiB,CAACK,IAAlB,GAAyB,CAApD,EAAuD;AACrDzB,QAAAA,MAAM,GAAG,IAAT;AACAF,QAAAA,MAAM,CAAC4B,IAAP,CACG,aAAYnB,gCAAgC,CAACI,QAAD,CAAW,gDAD1D;AAGD;AA7BgD;;AAcnD,yBAA+CpB,OAAO,CAACc,SAAD,CAAtD,8HAAmE;AAAA;;AAAA,+BAK/D;AAWH;AA9BkD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAgCnD,MAAI,CAACL,MAAL,EAAa;AACXF,IAAAA,MAAM,CAAC6B,OAAP;AACD;AACF,CAnCD;;AAqCAhC,MAAM,CAACC,OAAP,CAAegC,IAAf,GAAsB,sBAAtB","sourcesContent":["const { entries, fromPairs } = require('lodash')\n\nconst asyncEvents = new Set([\n  's3',\n  'sns',\n  'alexaSkill',\n  'iot',\n  'cloudwatchEvent',\n  'cloudwatchLog',\n  'cognitoUserPool',\n  'alexaSmartHome'\n])\nmodule.exports = function dlqPolicy(policy, service) {\n  let failed = false\n  const {\n    declaration: { functions },\n    provider: { naming },\n    compiled: {\n      'cloudformation-template-update-stack.json': { Resources }\n    }\n  } = service\n  const logicalFuncNamesToConfigFuncName = fromPairs(\n    Object.keys(functions || {}).map((funcName) => [naming.getLambdaLogicalId(funcName), funcName])\n  )\n\n  // for (const [name, { events, onError }] of entries(functions)) {\n  for (const [funcName, { Properties, Type }] of entries(Resources)) {\n    if (\n      Type !== 'AWS::Lambda::Function' ||\n      (Properties.DeadLetterConfig && Properties.DeadLetterConfig.TargetArn)\n    ) {\n      continue\n    }\n    const events = functions[logicalFuncNamesToConfigFuncName[funcName]].events || []\n    const eventTypes = new Set(events.map((ev) => Object.keys(ev)[0]))\n    const eventIntersection = new Set([...asyncEvents].filter((x) => eventTypes.has(x)))\n    if (events.length === 0 || eventIntersection.size > 0) {\n      failed = true\n      policy.fail(\n        `Function \"${logicalFuncNamesToConfigFuncName[funcName]}\" doesn't have a Dead Letter Queue configured.`\n      )\n    }\n  }\n\n  if (!failed) {\n    policy.approve()\n  }\n}\n\nmodule.exports.docs = 'https://git.io/fjfkN'\n"],"file":"require-dlq.js"}