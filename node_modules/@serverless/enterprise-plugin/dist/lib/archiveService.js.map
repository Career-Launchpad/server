{"version":3,"sources":["../../src/lib/archiveService.js"],"names":["ctx","sls","service","tenant","accessKey","cli","log","data","name","app","provider","region","then","catch","err","Error"],"mappings":";;;;;;;AAIA;;;;;;;;;;;;;0BAEe,iBAAeA,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEW,wCAAsBA,GAAG,CAACC,GAAJ,CAAQC,OAAR,CAAgBC,MAAtC,CAFX;;AAAA;AAEPC,YAAAA,SAFO;AAIbJ,YAAAA,GAAG,CAACC,GAAJ,CAAQI,GAAR,CAAYC,GAAZ,CAAgB,uDAAhB,EAAyE,uBAAzE;AAEMC,YAAAA,IANO,GAMA;AACXC,cAAAA,IAAI,EAAER,GAAG,CAACC,GAAJ,CAAQC,OAAR,CAAgBA,OADX;AAEXC,cAAAA,MAAM,EAAEH,GAAG,CAACC,GAAJ,CAAQC,OAAR,CAAgBC,MAFb;AAGXM,cAAAA,GAAG,EAAET,GAAG,CAACC,GAAJ,CAAQC,OAAR,CAAgBO,GAHV;AAIXC,cAAAA,QAAQ,EAAEV,GAAG,CAACC,GAAJ,CAAQC,OAAR,CAAgBQ,QAAhB,CAAyBF,IAJxB;AAKXG,cAAAA,MAAM,EAAEX,GAAG,CAACC,GAAJ,CAAQC,OAAR,CAAgBQ,QAAhB,CAAyBC,MALtB;AAMXP,cAAAA;AANW,aANA;AAAA,6CAeN,iCAAeG,IAAf,EACJK,IADI,CACC,YAAM;AACVZ,cAAAA,GAAG,CAACC,GAAJ,CAAQI,GAAR,CAAYC,GAAZ,CACE,mEADF,EAEE,uBAFF;AAID,aANI,EAOJO,KAPI,CAOE,UAACC,GAAD,EAAS;AACdd,cAAAA,GAAG,CAACC,GAAJ,CAAQI,GAAR,CAAYC,GAAZ,CACE,+DADF,EAEE,uBAFF;AAIA,oBAAM,IAAIS,KAAJ,CAAUD,GAAV,CAAN;AACD,aAbI,CAfM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["/*\n * Archive Service\n */\n\nimport { archiveService, getAccessKeyForTenant } from '@serverless/platform-sdk'\n\nexport default async function(ctx) {\n  // Defaults\n  const accessKey = await getAccessKeyForTenant(ctx.sls.service.tenant)\n\n  ctx.sls.cli.log('Archiving this service in the Enterprise Dashboard...', 'Serverless Enterprise')\n\n  const data = {\n    name: ctx.sls.service.service,\n    tenant: ctx.sls.service.tenant,\n    app: ctx.sls.service.app,\n    provider: ctx.sls.service.provider.name,\n    region: ctx.sls.service.provider.region,\n    accessKey\n  }\n\n  return archiveService(data)\n    .then(() => {\n      ctx.sls.cli.log(\n        'Successfully archived this service in the Enterprise Dashboard...',\n        'Serverless Enterprise'\n      )\n    })\n    .catch((err) => {\n      ctx.sls.cli.log(\n        'Failed to archive this service in the Enterprise Dashboard...',\n        'Serverless Enterprise'\n      )\n      throw new Error(err)\n    })\n}\n"],"file":"archiveService.js"}